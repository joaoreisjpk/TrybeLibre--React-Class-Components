{"version":3,"sources":["logo.jpeg","components/Header.jsx","components/CheckoutList.jsx","pages/Checkout.jsx","services/api.js","components/Categories.jsx","components/ProductList.jsx","pages/MainPage.jsx","components/Stars.jsx","pages/ProductDetailing.jsx","components/ShoppingList.jsx","pages/ShoppingCart.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","to","src","logo","alt","React","Component","CheckoutList","props","remove","product","onClick","state","count","pCount","this","title","thumbnail","price","style","display","alignItems","length","slice","toFixed","Checkout","componentDidMount","a","lista","JSON","parse","localStorage","getItem","filter","item","updateList","subTotal","setState","forEach","metodoDePagamento","margin","marginRight","marginTop","htmlFor","type","id","name","clientInfo","action","placeholder","undefined","map","key","listUpdate","getCategories","fetch","promiseReq","jsonReq","json","getProductsFromCategoryAndQuery","QUERY","CATEGORY_ID","Categories","categoria","padding","ProductList","addToCart","some","index","findIndex","setItem","stringify","cartLength","newThumb","i","doubleButton","pathname","shipping","textAlign","fontSize","width","free_shipping","color","MainPage","filterList","categoriaId","handleClick","console","log","categoryList","categoriaList","shoppingCartIcon","searchBar","query","value","onChange","handleChange","defaultText","productList","rel","href","attNumber","fetchAPi","categoriesList","target","loading","fetchItem","results","param","overflow","height","Stars","int","e","ProductDetailing","cartUpdate","handleStar","parentNode","classList","contains","removeStar","addStar","add","getList","document","getElementById","firstChild","Number","location","avaliacao","marginBottom","cols","rows","buttonsQuantity","quantity","available_quantity","attributes","attribute","value_name","ShoppingList","ShoppingCart","justifyItems","App","exact","path","render","Boolean","window","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b4644268.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.23059254.jpeg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../logo.jpeg';\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <div className=\"row container\">\n          <div className=\"container\">\n            <Link to=\"../\" className=\"header-link\">\n              <img className=\"logo\" src={ logo } alt=\"trybe logo\" />\n            </Link>\n          </div>\n          <section className=\"header container\">\n            <Link to=\"../\" className=\"header-link\">\n              <h1 className=\"header-title\">Trybe-Libre</h1>\n            </Link>\n          </section>\n        </div>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class CheckoutList extends Component {\n  constructor(props) {\n    super(props);\n    const { product } = this.props;\n    this.state = {\n      count: product.pCount,\n    };\n  }\n\n  remove = () => {\n    const { product, onClick } = this.props;\n    onClick(product);\n  }\n\n  render() {\n    // Ajudado pelo Jean Marcel\n    const { product } = this.props;\n    const { title, thumbnail, price } = product;\n    const { count } = this.state;\n    const MAXC = 70;\n    return (\n      <section className=\"checkoutDiv\">\n        <div style={ { display: 'flex', alignItems: 'center' } }>\n          <img className=\"checkoutImg\" src={ thumbnail } alt={ title } />\n          <div className=\"checkoutTitle\">\n            { title.length > MAXC ? `${title.slice(0, MAXC)}...` : title }\n          </div>\n        </div>\n        <p>{ `R$ ${(price * count).toFixed(2)}` }</p>\n      </section>\n    );\n  }\n}\n\nCheckoutList.propTypes = {\n  product: PropTypes.shape([]),\n  title: PropTypes.string,\n  thumbnail: PropTypes.string,\n  price: PropTypes.number,\n  id: PropTypes.string,\n  attributes: PropTypes.shape([]),\n}.isRequired;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport CheckoutList from '../components/CheckoutList';\n\nexport default class Checkout extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      lista: undefined,\n    };\n  }\n\n  componentDidMount = async () => {\n    let lista = JSON.parse(localStorage.getItem('shoppingCartList'));\n    lista = lista.filter((item) => item.pCount !== 0);\n    await this.updateList(lista);\n    this.subTotal();\n  }\n\n  updateList = async (lista) => {\n    lista = lista.filter((item) => item.pCount !== 0);\n    this.setState({ lista });\n  }\n\n  subTotal = () => {\n    const { lista } = this.state;\n    let subTotal = 0;\n    lista.forEach((item) => {\n      subTotal += item.price * item.pCount;\n    });\n    return subTotal;\n  }\n\n  metodoDePagamento = () => (\n    <section className=\"checkoutSection\">\n      <h3\n        className=\"ui dividing header font\"\n        style={ { margin: '2px 15px 5px' } }\n      >\n        Método de Pagamento\n      </h3>\n      <div style={ { display: 'flex' } }>\n        <div style={ { marginRight: '50px' } }>\n          <h3 style={ { marginTop: '5px' } }>Boleto</h3>\n          <label htmlFor=\"barcode\">\n            <input type=\"radio\" id=\"barcode\" name=\"payment\" />\n            <i className=\"barcode huge icon\" />\n          </label>\n        </div>\n        <div>\n          <h3 style={ { marginTop: '5px' } }>Cartão de crédito</h3>\n          <label htmlFor=\"visa\">\n            <input type=\"radio\" id=\"visa\" name=\"payment\" />\n            <spam style={ { margin: '0 10px' } }>Visa</spam>\n            <i className=\"credit huge card icon\" />\n          </label>\n          <label htmlFor=\"master\">\n            <input type=\"radio\" id=\"master\" name=\"payment\" />\n            <spam style={ { margin: '0 10px' } }>MasterCard</spam>\n            <i className=\"credit huge card icon\" />\n          </label>\n          <label htmlFor=\"elo\">\n            <input type=\"radio\" id=\"elo\" name=\"payment\" />\n            <spam style={ { margin: '0 10px' } }>Elo</spam>\n            <i className=\"credit huge card icon\" />\n          </label>\n        </div>\n      </div>\n    </section>\n  )\n\n  clientInfo = () => (\n    <section className=\"checkoutSection\">\n      <h3\n        className=\"ui dividing header font\"\n        style={ { margin: '2px 15px 5px' } }\n      >\n        Informações do Comprador\n      </h3>\n      <form action=\"\">\n        <section>\n          <input className=\"checkoutInput\" placeholder=\"Nome Completo\" type=\"text\" />\n          <input className=\"checkoutInput\" placeholder=\"CPF\" type=\"text\" />\n          <input className=\"checkoutInput\" placeholder=\"E-mail\" type=\"text\" />\n          <input className=\"checkoutInput\" placeholder=\"Telefone\" type=\"text\" />\n        </section>\n        <section>\n          <input className=\"checkoutInput\" placeholder=\"CEP\" type=\"text\" />\n          <input className=\"checkoutInput\" id=\"adr\" placeholder=\"Endereço\" type=\"text\" />\n        </section>\n        <section>\n          <input className=\"checkoutInput\" id=\"7\" placeholder=\"Complemento\" type=\"text\" />\n          <input className=\"checkoutInput\" id=\"num\" placeholder=\"Número\" type=\"text\" />\n          <input className=\"checkoutInput\" id=\"city\" placeholder=\"Cidade\" type=\"text\" />\n          <input className=\"checkoutInput\" id=\"10\" placeholder=\"Estado\" type=\"text\" />\n        </section>\n      </form>\n    </section>\n  );\n\n  render() {\n    const { lista } = this.state;\n    if (!lista) {\n      return <div className=\"ui active inline loader\" />;\n    }\n    return (\n      <div className=\"container\">\n        <section style={ { margin: '30px 0' } }>\n          <Link to=\"./shoppingcart\">\n            <i className=\"reply big icon\" />\n          </Link>\n        </section>\n        <section className=\"checkoutSection\">\n          <h3\n            className=\"ui dividing header font\"\n            style={ { margin: '2px 15px 13px' } }\n          >\n            Revise Seus produtos\n          </h3>\n          {(lista.length < 1) ? (\n            <div className=\"default-text\">\n              Seu carrinho está vazio\n            </div>\n          ) : lista.map((item) => (\n            <CheckoutList\n              key={ item.id }\n              product={ item }\n              onClick={ this.remove }\n              listUpdate={ this.listUpdate }\n            />\n          ))}\n          <div className=\"checkoutPrice\">\n            <b>Total: </b>\n            { `  R$ ${this.subTotal().toFixed(2)}` }\n          </div>\n        </section>\n        { this.clientInfo() }\n        { this.metodoDePagamento() }\n        <button className=\"ui black big button\" type=\"button\">Finalizar a Compra</button>\n        <div style={ { marginTop: '20px' } }>.</div>\n      </div>\n    );\n  }\n}\n","export async function getCategories() {\n  const promiseReq = await fetch('https://api.mercadolibre.com/sites/MLB/categories');\n  const jsonReq = promiseReq.json();\n  return jsonReq;\n}\n\nexport async function getProductsFromCategoryAndQuery(QUERY, CATEGORY_ID) {\n  // Implemente aqui! Quando o fizer, descomente os parâmetros que essa função recebe\n  const promiseReq = await fetch(`https://api.mercadolibre.com/sites/MLB/search?q=${QUERY}&category=${CATEGORY_ID}`);\n  const jsonReq = promiseReq.json();\n  return jsonReq;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Categories extends Component {\n  render() {\n    const { categoria, onClick } = this.props;\n    return (\n      <div className=\"item\">\n        <button\n          type\n          className=\"ui blue basic button\"\n          onClick={ () => onClick(categoria.id) }\n          style={{padding: '8px', margin: '-4px 0'}}\n        >\n          { categoria.name }\n        </button>\n      </div>\n    );\n  }\n}\n\nCategories.propTypes = {\n  categoria: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.string,\n  }).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default class ProductList extends Component {\n  addToCart = (product) => {\n    const { onClick } = this.props;\n    let lista = JSON.parse(localStorage.getItem('shoppingCartList'));\n    // Caso o produto já esteja listado, apenas adiciona 1 à sua contagem(Pcount).\n    if (lista.some((item) => item.id === product.id)) {\n      const index = lista.findIndex((item) => item.id === product.id);\n      lista[index] = { ...product, pCount: lista[index].pCount + 1 };\n      // Caso não exista o item é adiciona à lista no localStorage.\n    } else lista = [...lista, { ...product, pCount: 1 }];\n    localStorage.setItem('shoppingCartList', JSON.stringify(lista));\n    let cartLength = 0;\n    if (lista) {\n      lista.forEach((item) => {\n        cartLength += item.pCount;\n      });\n    }\n    onClick(cartLength);\n  };\n\n  thumbnail = () => {\n    const { product: { thumbnail } } = this.props;\n    let newThumb = '';\n    for (let i = 0; i < thumbnail.length; i += 1) {\n      if (thumbnail[i] === 'I') newThumb += 'C';\n      else newThumb += thumbnail[i];\n    }\n    return newThumb;\n  }\n\n  doubleButton = () => {\n    const { product, product: { id } } = this.props;\n    return (\n      <section className=\"doubleButton\">\n        <Link to={ { pathname: `/details/${id}`, state: { product } } }>\n          <button\n            className=\"ui gray animated fade button\"\n            type=\"button\"\n            style={ { padding: '0 10px', marginRight: '10px' } }\n          >\n            <div className=\"hidden content\">\n              <i className=\"eye icon\" />\n              <i className=\"eye icon\" />\n            </div>\n            <div className=\"visible content\">\n              More Details\n            </div>\n          </button>\n        </Link>\n        <button\n          className=\"ui green animated fade button\"\n          type=\"button\"\n          onClick={ () => this.addToCart(product) }\n          style={ { padding: '0 10px', marginRight: '0' } }\n        >\n          <div className=\"hidden content\">\n            <i className=\"plus icon\" />\n            <i className=\"cart large icon\" />\n          </div>\n          <div className=\"visible content\">\n            Add to Cart\n          </div>\n        </button>\n      </section>\n    );\n  }\n\n  render() {\n    // Ajudado pelo Jean Marcel\n    const { product } = this.props;\n    const { title, price, id, shipping } = product;\n    const MAXC = 70;\n    return (\n      <div className=\"productDiv\">\n        <Link to={ { pathname: `/details/${id}`, state: { product } } }>\n          <section className=\"productImgTitle\">\n            <img src={ this.thumbnail() } alt={ title } className=\"productThumb\" />\n            <p className=\"productName\">\n              { title.length > MAXC ? `${title.slice(0, MAXC)}...` : title }\n            </p>\n          </section>\n        </Link>\n        <div className=\"productPriceButton\">\n          <section style={ { textAlign: 'center' } }>\n            <p className=\"productPrice\" style={ { fontSize: '1.4rem', width: '112px' } }>\n              $\n              { price && price.toFixed(2) }\n            </p>\n            {(shipping.free_shipping) ? (\n              <div style={ { marginRight: '17px', color: 'red' } }>\n                Frete Grátis\n              </div>\n            ) : (\n              <div style={ { marginRight: '17px', color: 'gray' } }>\n                Possui Frete\n              </div>\n            )}\n          </section>\n          { /* Retorna os botões More details e Add to Cart */ }\n          { this.doubleButton() }\n        </div>\n      </div>\n    );\n  }\n}\nProductList.propTypes = {\n  product: PropTypes.shape([]),\n  title: PropTypes.string,\n  thumbnail: PropTypes.string,\n  price: PropTypes.number,\n  id: PropTypes.string,\n  attributes: PropTypes.shape([]),\n}.isRequired;\n","/* eslint-disable react/jsx-max-depth */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { getCategories, getProductsFromCategoryAndQuery } from '../services/api';\nimport Categories from '../components/Categories';\nimport ProductList from '../components/ProductList';\nimport '../Style/ProductList.css';\n\nexport default class MainPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      categoriaId: '',\n      query: '',\n      categoriaList: [],\n      productList: [],\n      cartLength: undefined,\n      loading: false,\n    };\n  }\n\n  filterList = (id) => {\n    this.setState({ categoriaId: id }, () => this.handleClick());\n    console.log(id);\n  }\n\n  categoryList = () => {\n    const { categoriaList } = this.state;\n    return (\n      categoriaList.map((categoria) => (\n        <Categories\n          key={ categoria.id }\n          categoria={ categoria }\n          onClick={ this.filterList }\n        />\n      ))\n    );\n  }\n\n  shoppingCartIcon = () => {\n    const { cartLength } = this.state;\n    return (cartLength || cartLength === 0 ? (\n      <Link to=\"/shoppingcart\">\n        <i className=\"shopping cart big icon\">\n          <span className=\"shopping-cart-size\">\n            { cartLength }\n          </span>\n        </i>\n      </Link>\n    ) : <div className=\"ui active inline loader\" />\n    );\n  }\n\n  searchBar = () => {\n    const { query } = this.state;\n    return (\n      <section className=\"searchbar\">\n        <div className=\"ui icon input search-input\">\n          <input\n            type=\"text\"\n            id=\"query\"\n            value={ query }\n            onChange={ this.handleChange }\n          />\n          <button\n            className=\"ui blue basic button\"\n            type=\"button\"\n            onClick={ this.handleClick }\n          >\n            <i className=\"search left icon\" />\n            Pesquisar\n          </button>\n\n        </div>\n        { this.shoppingCartIcon() }\n      </section>\n    );\n  }\n\n  defaultText = () => (\n    <div className=\"default-text\">\n      Digite algum termo de pesquisa ou escolha uma categoria.\n    </div>\n  );\n\n  productList = () => {\n    const { productList } = this.state;\n    return (\n      <div className=\"productList\">\n        <link rel=\"stylesheet\" href=\"../Style/productList\" />\n        { productList.map((product) => (\n          <ProductList\n            key={ product.id }\n            product={ product }\n            onClick={ this.onClick }\n          />))}\n      </div>\n    );\n  }\n\n  attNumber = () => {\n    const lista = JSON.parse(localStorage.getItem('shoppingCartList'));\n    let cartLength = 0;\n    if (lista) {\n      lista.forEach((item) => {\n        cartLength += item.pCount;\n      });\n    }\n    this.setState({ cartLength });\n  }\n\n  componentDidMount = async () => {\n    const fetchAPi = await getCategories();\n    // const fetchItem = await getProductsFromCategoryAndQuery(query, categoriaId);\n    const lista = localStorage.getItem('shoppingCartList');\n    if (!lista) localStorage.setItem('shoppingCartList', JSON.stringify([]));\n    this.categoriesList(fetchAPi);\n    this.attNumber();\n    this.handleClick();\n  }\n\n  handleChange = async ({ target: { value, id } }) => {\n    this.setState({ [id]: value });\n  }\n\n  handleClick = async () => {\n    const { categoriaId, query } = this.state;\n    this.setState({ loading: true });\n    const fetchItem = await getProductsFromCategoryAndQuery(query, categoriaId);\n    if (fetchItem) this.setState({ productList: fetchItem.results, loading: false });\n  }\n\n  onClick = (param) => {\n    this.setState({ cartLength: param });\n  }\n\n  categoriesList = (fetchAPi) => {\n    this.setState({ categoriaList: fetchAPi });\n  }\n\n  loading = () => (\n    <div className=\"loading\">\n      <span>Loading</span>\n      <i className=\"cart huge icon\" />\n    </div>\n  )\n\n  render() {\n    const { categoriaList, productList, loading } = this.state;\n    return (\n      <div className=\"container pg-inicial\">\n        <section\n          className=\"ui vertical text menu\"\n          style={ { overflow: 'auto', height: '90vh', padding: '2px' } }\n        >\n          <div className=\"header item\">Categorias</div>\n          { (categoriaList !== []) && this.categoryList() }\n        </section>\n        <section className=\"content\">\n          { this.searchBar() }\n          { productList && productList.length < 1 && this.defaultText() }\n          { loading ? this.loading() : this.productList()}\n        </section>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class Stars extends Component {\n  render() {\n    const { int, onClick } = this.props;\n    return (\n      <button\n        id={ int }\n        type=\"button\"\n        className=\"ui basic button bStar\"\n        onClick={ (e) => onClick(e) }\n      >\n        <i className=\"icon white star\" />\n      </button>\n    );\n  }\n}\n\nStars.propTypes = {\n  int: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../Style/ProductDetailing.css';\nimport Stars from '../components/Stars';\n\nconst CINCO = 5;\n\nexport default class ProductDetailing extends Component {\n  constructor(props) {\n    super(props);\n    const { location: { state: { product } } } = this.props;\n    const lista = JSON.parse(localStorage.getItem('shoppingCartList'));\n    let index;\n    if (lista) index = lista.findIndex((item) => item.id === product.id);\n    this.state = {\n      count: (lista && lista.length && lista[index]) ? lista[index].pCount : 0,\n      cartLength: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    const lista = localStorage.getItem('shoppingCartList');\n    if (!lista) localStorage.setItem('shoppingCartList', JSON.stringify([]));\n    this.cartUpdate();\n  }\n\n  handleClick(param) {\n    const { count } = this.state;\n    const { location: { state } } = this.props;\n    const { product: { available_quantity: quantity } } = state;\n    if (param && quantity > count) this.setState({ count: Number(count) + 1 });\n    else if (count > 0 && !param) this.setState({ count: Number(count) - 1 });\n  }\n\n  cartUpdate = () => {\n    const lista = JSON.parse(localStorage.getItem('shoppingCartList'));\n    let cartLength = 0;\n    if (lista) {\n      lista.forEach((item) => {\n        cartLength += item.pCount;\n      });\n    }\n    this.setState({ cartLength });\n  }\n\n  handleStar = (e) => {\n    const int = e.target.parentNode.id;\n    if (e.target.classList.contains('yellow')) {\n      console.log('contains'); this.removeStar(int);\n    } else if (int > 1) this.addStar(int);\n    else e.target.classList.add('yellow');\n  }\n\n  addStar = (int) => {\n    const getList = document.getElementById(int).firstChild.classList;\n    if (!getList.contains('yellow')) getList.add('yellow');\n    if (int > 1) this.addStar(int - 1);\n  }\n\n  removeStar = (int) => {\n    console.log(int, document.getElementById(int));\n    const getList = document.getElementById(int).firstChild.classList;\n    getList.remove('yellow');\n    if (int < CINCO) this.removeStar(Number(int) + 1);\n  }\n\n  addToCart = (product) => {\n    const { count } = this.state;\n    let lista = JSON.parse(localStorage.getItem('shoppingCartList'));\n    // Caso o produto já esteja listado, apenas adiciona 1 à sua contagem(Pcount).\n    if (lista.some((item) => item.id === product.id)) {\n      const index = lista.findIndex((item) => item.id === product.id);\n      lista[index] = { ...product, pCount: count };\n      // Caso não exista o item é adiciona ao localStorage.\n    } else lista = [...lista, { ...product, pCount: count }];\n    localStorage.setItem('shoppingCartList', JSON.stringify(lista));\n    localStorage.setItem('cartLength', lista.length);\n    this.cartUpdate();\n  };\n\n  // Atualiza a o link da API para entregar imagens maiores (220x220px)\n  thumbnail = () => {\n    const { location: { state: { product: { thumbnail } } } } = this.props;\n    let newThumb = '';\n    for (let i = 0; i < thumbnail.length; i += 1) {\n      if (thumbnail[i] === 'I') newThumb += 'V';\n      else newThumb += thumbnail[i];\n    }\n    return newThumb;\n  }\n\n  avaliacao = () => (\n    <section className=\"avaliacao\">\n      <h2>Avaliações</h2>\n      <div className=\"avaliacaoForm\">\n        <form action=\"\">\n          <div style={ { display: 'flex', marginBottom: '15px' } }>\n            <input className=\"evTitle\" placeholder=\"Title\" type=\"text\" />\n            <Stars int=\"1\" onClick={ (e) => this.handleStar(e) } />\n            <Stars int=\"2\" onClick={ (e) => this.handleStar(e) } />\n            <Stars int=\"3\" onClick={ (e) => this.handleStar(e) } />\n            <Stars int=\"4\" onClick={ (e) => this.handleStar(e) } />\n            <Stars int=\"5\" onClick={ (e) => this.handleStar(e) } />\n          </div>\n          <textarea cols=\"45\" rows=\"5\" placeholder=\"Mensagem (opcional)\" />\n        </form>\n        <button type=\"button\" className=\"ui black basic button\"> Avaliar </button>\n      </div>\n    </section>\n  );\n\n  buttonsQuantity = () => {\n    const { location: { state: { product } } } = this.props;\n    const { count } = this.state;\n    return (\n      <section className=\"buttonsQuantity\">\n        <div className=\"quantityDiv\">\n          <h3 className=\"quantityTitle\">Quantidade</h3>\n          <div className=\"quantity\">\n            <button\n              type=\"button\"\n              onClick={ () => this.handleClick() }\n              className=\"circular small red inverted ui icon button\"\n            >\n              <i className=\"icon minus\" />\n            </button>\n            <p className=\"count\">{ count }</p>\n            <button\n              type=\"button\"\n              onClick={ () => this.handleClick(true) }\n              className=\"circular small green inverted ui icon button\"\n            >\n              <i className=\"icon plus\" />\n            </button>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          onClick={ () => this.addToCart(product) }\n          className=\" ui compact black button addToCart\"\n        >\n          Atualizar Carrinho\n        </button>\n      </section>\n    );\n  }\n\n  render() {\n    const { cartLength } = this.state;\n    const { location: { state: { product } } } = this.props;\n    const { title, price, attributes } = product;\n    return (\n      <div className=\"container\">\n        <section className=\"links\">\n          <Link to=\"../\">\n            <i className=\"reply big icon\" />\n          </Link>\n          <Link to=\"/shoppingcart\">\n            <i className=\"shopping cart big icon\">\n              <span className=\"shopping-cart-size\">{ cartLength }</span>\n            </i>\n          </Link>\n        </section>\n        <section className=\"titlePrice\">\n          <h2 style={ { marginRight: '10px' } }>\n            { `${title}` }\n            :\n          </h2>\n          <h2>\n            { `R$ ${price.toFixed(2)}` }\n          </h2>\n        </section>\n        <section className=\"imgDetails\">\n          <div className=\"img\">\n            <img\n              src={ this.thumbnail() }\n              alt={ title }\n              style={ { width: '320px', height: '320px' } }\n            />\n          </div>\n          <div className=\"details\">\n            <h2>Especificações técnicas:</h2>\n            <ul className=\"UL\">\n              { attributes.map((attribute) => (\n                <li key={ attribute.id }>\n                  { `${attribute.name}: ${attribute.value_name}` }\n                </li>\n              ))}\n            </ul>\n          </div>\n        </section>\n        {/* Renderiza os três botões(adicionar, remover, attCard) e a contagem */}\n        { this.buttonsQuantity() }\n        {/* Renderiza o formulário com os inputs e as stars */}\n        { this.avaliacao() }\n        <div>.</div>\n      </div>\n    );\n  }\n}\n\nProductDetailing.propTypes = {\n  location: PropTypes.shape([]),\n  title: PropTypes.string,\n  thumbnail: PropTypes.string,\n  price: PropTypes.number,\n  id: PropTypes.string,\n  attributes: PropTypes.shape([]),\n}.isRequired;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default class ShoppingList extends Component {\n  constructor(props) {\n    super(props);\n    const { product } = this.props;\n    this.state = {\n      count: product.pCount,\n    };\n  }\n\n  handleClick = async (param) => {\n    const { count } = this.state;\n    const { product: { available_quantity: quantity }, listUpdate, product } = this.props;\n    if (param && quantity > count) {\n      await this.setState({ count: Number(count) + 1 }, listUpdate(product, count + 1));\n    } else if (count > 0 && !param) {\n      await this.setState({ count: Number(count) - 1 }, listUpdate(product, count - 1));\n    }\n  }\n\n  buttonsQuantity = () => {\n    const { count } = this.state;\n    return (\n      <section className=\"buttonsQuantity\">\n        <div className=\"quantityDiv\">\n          <div className=\"quantity\">\n            <button\n              type=\"button\"\n              onClick={ () => this.handleClick() }\n              className=\"circular small red inverted ui icon button\"\n            >\n              <i className=\"icon minus\" />\n            </button>\n            <p className=\"count\">{ count }</p>\n            <button\n              type=\"button\"\n              onClick={ () => this.handleClick(true) }\n              className=\"circular small green inverted ui icon button\"\n            >\n              <i className=\"icon plus\" />\n            </button>\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  remove = () => {\n    const { product, onClick } = this.props;\n    onClick(product);\n  }\n\n  render() {\n    // Ajudado pelo Jean Marcel\n    const { product } = this.props;\n    const { title, thumbnail, price } = product;\n    const { count } = this.state;\n    const MAXC = 70;\n    return (\n      <section className=\"shoppingProductDiv\">\n        <button\n          type=\"button\"\n          className=\"ui inverted button\"\n          onClick={ this.remove }\n        >\n          <i className=\"ui close big icon closeIcon\" />\n        </button>\n        <Link\n          to={ { pathname: `/details/${product.id}`, state: { product } } }\n          style={ { color: 'black', display: 'flex', alignItems: 'center' } }\n        >\n          <img className=\"shoppingProductImg\" src={ thumbnail } alt={ title } />\n          <div className=\"productTitle\">\n            { title.length > MAXC ? `${title.slice(0, MAXC)}...` : title }\n          </div>\n        </Link>\n        { this.buttonsQuantity() }\n        <p className=\"productPrice\">{ `R$ ${(price * count).toFixed(2)}` }</p>\n      </section>\n    );\n  }\n}\n\nShoppingList.propTypes = {\n  product: PropTypes.shape([]),\n  title: PropTypes.string,\n  thumbnail: PropTypes.string,\n  price: PropTypes.number,\n  id: PropTypes.string,\n  attributes: PropTypes.shape([]),\n}.isRequired;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ShoppingList from '../components/ShoppingList';\nimport '../Style/ShoppingCart.css';\n\nexport default class ShoppingCart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      lista: undefined,\n    };\n  }\n\n  componentDidMount = async () => {\n    let lista = JSON.parse(localStorage.getItem('shoppingCartList'));\n    lista = lista.filter((item) => item.pCount !== 0);\n    await this.updateList(lista);\n    this.subTotal();\n  }\n\n  updateList = async (lista) => {\n    lista = lista.filter((item) => item.pCount !== 0);\n    this.setState({ lista });\n  }\n\n  subTotal = () => {\n    const { lista } = this.state;\n    let subTotal = 0;\n    lista.forEach((item) => {\n      subTotal += item.price * item.pCount;\n    });\n    return subTotal;\n  }\n\n  remove = (product) => {\n    let lista = JSON.parse(localStorage.getItem('shoppingCartList'));\n    console.log(product);\n    lista = lista.filter((item) => {\n      console.log(item.id); return item.id !== product.id;\n    });\n    localStorage.setItem('shoppingCartList', JSON.stringify(lista));\n    this.setState({ lista });\n  }\n\n  listUpdate = (product, count) => {\n    const lista = JSON.parse(localStorage.getItem('shoppingCartList'));\n    const index = lista.findIndex((item) => item.id === product.id);\n    lista[index].pCount = count;\n    localStorage.setItem('shoppingCartList', JSON.stringify(lista));\n    this.setState({ lista });\n  }\n\n  render() {\n    const { lista } = this.state;\n    if (!lista) {\n      return <div className=\"ui active inline loader\" />;\n    }\n    if (lista.length === 0) {\n      return (\n        <div className=\"default-text\">\n          Seu carrinho está vazio\n        </div>\n      );\n    }\n    return (\n      <div className=\"container\">\n        <section style={ { margin: '30px 0' } }>\n          <Link to=\"../\">\n            <i className=\"reply big icon\" />\n          </Link>\n          <div style={ { display: 'flex', margin: '30px 0' } }>\n            <i className=\"shopping cart big icon\" />\n            <p className=\"cardTitle\">Carrinho de Compras</p>\n          </div>\n        </section>\n        {(lista.length < 1) ? (\n          <div className=\"default-text\">\n            Seu carrinho está vazio\n          </div>\n        ) : lista.map((item) => (\n          <ShoppingList\n            key={ item.id }\n            product={ item }\n            onClick={ this.remove }\n            listUpdate={ this.listUpdate }\n          />\n        ))}\n        <div style={ { display: 'flex', justifyItems: 'center' } }>\n          <div style={ { fontSize: '1.3rem', margin: '30px 0' } }>\n            <b>Valor Total da Compra:</b>\n            { ` R$ ${this.subTotal().toFixed(2)}` }\n          </div>\n          <Link to=\"../checkout\">\n            <button\n              type=\"button\"\n              className=\"ui black button\"\n              style={ { margin: '20px 30px' } }\n            >\n              Finalizar a Compra\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Route } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header';\nimport Checkout from './pages/Checkout';\nimport MainPage from './pages/MainPage';\nimport ProductDetailing from './pages/ProductDetailing';\nimport ShoppingCart from './pages/ShoppingCart';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <Route exact path=\"/\">\n            <Header />\n            <MainPage />\n          </Route>\n          <Route\n            path=\"/shoppingcart\"\n            render={ (props) => (\n              <div>\n                <Header />\n                <ShoppingCart { ...props } />\n              </div>\n            ) }\n          />\n          <Route\n            exact\n            path=\"/details/:id\"\n            render={ (props) => (\n              <div>\n                <Header />\n                <ProductDetailing { ...props } />\n              </div>\n            ) }\n          />\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}